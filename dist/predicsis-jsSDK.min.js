angular.module("predicsis.jsSDK.models",[]),angular.module("predicsis.jsSDK.helpers",[]),angular.module("predicsis.jsSDK",["predicsis.jsSDK.models","predicsis.jsSDK.helpers","restangular"]).provider("predicsisAPI",function(){"use strict";var errorHandler=function(response){throw Error(response)},baseURL="https://api.predicsis.com",oauthToken="no-token-defined",requestHeaders={Accept:"application/json"};this.setErrorHandler=function(handler){errorHandler=handler},this.setBaseUrl=function(url){baseURL=url},this.getBaseUrl=function(){return baseURL},this.getOauthToken=function(){return oauthToken},this.hasOauthToken=function(){return Boolean(void 0===oauthToken)},this.setOauthToken=function(token){token!==!1&&(requestHeaders.Authorization=token,oauthToken=token)},this.$get=function(Restangular,uploadHelper,Datafiles,Datasets,Dictionaries,Jobs,Modalities,Models,OauthTokens,OauthApplications,PreparationRules,Projects,Reports,UserSettings,Sources,Users,Variables,Uploads){var self=this;return Restangular.setBaseUrl(this.getBaseUrl()),Restangular.setDefaultHeaders(requestHeaders),Restangular.setErrorInterceptor(function(response){errorHandler(response)}),Jobs.setErrorHandler(function(err){errorHandler({data:{errors:err.errors,warnings:err.warnings},config:{url:err.url,method:"GET",action:err.action}})}),Restangular.addResponseInterceptor(function(data,operation,what,url,response){if(["getList","post","get","patch"].indexOf(operation)>-1&&204!==response.status){var resourceName=Object.keys(response.data)[0];resourceName&&(data=response.data[resourceName])}return data}),{Datafiles:Datafiles,Datasets:Datasets,Dictionaries:Dictionaries,Jobs:Jobs,Modalities:Modalities,Models:Models,OauthTokens:OauthTokens,OauthApplications:OauthApplications,PreparationRules:PreparationRules,Projects:Projects,Reports:Reports,Sources:Sources,Users:Users,UserSettings:UserSettings,Variables:Variables,Uploads:Uploads,uploadHelper:uploadHelper,_restangular:Restangular,setOauthToken:function(token){self.setOauthToken(token),Restangular.setDefaultHeaders(requestHeaders)},setErrorHandler:function(handler){self.setErrorHandler(handler)}}}}),angular.module("predicsis.jsSDK.models").service("Datafiles",function($q,Restangular){"use strict";function dataFile(id){return Restangular.one("data_files",id)}function dataFiles(){return Restangular.all("data_files")}this.all=function(dataFileIds){return void 0===dataFileIds?dataFiles().getList():(dataFileIds=dataFileIds||[],$q.all(dataFileIds.map(function(id){return dataFile(id).get()})))},this.get=function(dataFileId){return dataFile(dataFileId).get()},this.getSignedUrl=function(datasetId){return dataFile(datasetId).one("signed_url",null).get().then(function(url){return url.signed_url})},this.download=function(datasetId){this.getSignedUrl(datasetId).then(function(signedUrl){window.location.assign(signedUrl)})}}),angular.module("predicsis.jsSDK.models").service("Datasets",function($injector,$q,Restangular,Jobs){"use strict";function dataset(id){return Restangular.one("datasets",id)}function datasets(){return Restangular.all("datasets")}var self=this,DEFAULT_SAMPLING=70;this.create=function(params){return Jobs.wrapAsyncPromise(datasets().post({dataset:params})).then(function(result){return dataset(result.id).get()})},this.createFromUpload=function(fileName,destFolder,type,container){type=type||"s3";var Sources=$injector.get("Sources"),source={name:fileName,data_file:{filename:fileName}},dataStore={type:type};if("s3"===type)dataStore.key=destFolder,dataStore.bucket=container;else{if("swift"!==type)throw"Invalid source dataStore type : "+type;dataStore.object=destFolder,dataStore.container=container}return Sources.create(source,dataStore).then(function(source){return self.create({type:"uploaded_dataset",name:fileName,source_ids:[source.id],data_file:{filename:fileName}})})},this.split=function(id,name,filename,sampling){filename=filename||name,sampling=sampling||DEFAULT_SAMPLING;var learn={type:"subset",dataset_id:id,name:"learned_"+name,data_file:{filename:"learned_"+filename},sampling:sampling},test={type:"subset",dataset_id:id,name:"tested_"+name,data_file:{filename:"tested_"+filename},sampling:-sampling};return $q.all({train:this.create(learn),test:this.create(test)})},this.all=function(ids){return void 0===ids?datasets().getList():(ids=ids||[],$q.all(ids.map(function(id){return dataset(id).get()})))},this.get=function(id){return dataset(id).get()},this.getChildren=function(datasetId,dictionaryId){var Dictionaries=$injector.get("Dictionaries");return Dictionaries.get(dictionaryId).then(function(dictionary){return self.all(dictionary.dataset_ids)}).then(function(childrenCandidates){return childrenCandidates.reduce(function(memo,child){return child.dataset_id===datasetId&&(self.isTrainPart(child,DEFAULT_SAMPLING)?memo.train=child:self.isTestPart(child,-DEFAULT_SAMPLING)&&(memo.test=child)),memo},{})})},this.update=function(id,changes){return changes.separator&&"	"===changes.separator&&(changes.separator="\\t"),Jobs.wrapAsyncPromise(dataset(id).patch({dataset:changes})).then(function(result){return dataset(result.id).get()})},this["delete"]=function(id){return dataset(id).remove()},this.removeDependencies=function(dataset){var Sources=$injector.get("Sources"),source_ids=dataset.source_ids||[],children_ids=dataset.children_dataset_ids||[];return $q.all([$q.all(source_ids.map(function(source_id){return Sources["delete"](source_id)})),$q.all(children_ids.map(function(child_id){return self["delete"](child_id)}))])},this.hasChildren=function(dataset){return Boolean(dataset.children_dataset_ids&&dataset.children_dataset_ids.length>0)},this.isParent=function(dataset){return Boolean("uploaded_dataset"===dataset.type)||this.isScore(dataset)},this.isChild=function(dataset){return Boolean("subset"===dataset.type)},this.isTrainPart=function(dataset,sampling){return sampling=sampling||DEFAULT_SAMPLING,this.isChild(dataset)&&angular.isNumber(sampling)&&sampling>=-100&&100>=sampling&&dataset.sampling===Math.abs(sampling)},this.isTestPart=function(dataset,sampling){return sampling=sampling||DEFAULT_SAMPLING,this.isChild(dataset)&&angular.isNumber(sampling)&&sampling>=-100&&100>=sampling&&dataset.sampling===-Math.abs(sampling)},this.isFormatted=function(dataset){return Boolean(null!==dataset.header)&&Boolean(null!==dataset.separator)},this.isScore=function(dataset){return Boolean("scoreset"===dataset.type)}}),angular.module("predicsis.jsSDK.models").service("Dictionaries",function($q,Restangular,Jobs){"use strict";function dictionary(id){return Restangular.one("dictionaries",id)}function dictionaries(){return Restangular.all("dictionaries")}this.createFromDataset=function(dataset){return this.create({name:encodeURI("dictionary_"+dataset.name.toLowerCase()),dataset_id:dataset.id})},this.create=function(params){return Jobs.wrapAsyncPromise(dictionaries().post({dictionary:params})).then(function(result){return dictionary(result.id).get()})},this.all=function(dictionaryIds){return void 0===dictionaryIds?dictionaries(dictionaryIds).getList():(dictionaryIds=dictionaryIds||[],$q.all(dictionaryIds.map(function(id){return dictionary(id).get()})))},this.get=function(dictionaryId){return dictionary(dictionaryId).get()},this.update=function(dictionaryId,changes){return Jobs.wrapAsyncPromise(dictionary(dictionaryId).patch({dictionary:changes})).then(function(result){return dictionary(result.id).get()})},this["delete"]=function(dictionaryId){return dictionary(dictionaryId).remove()}}),angular.module("predicsis.jsSDK.models").service("Jobs",function($q,Restangular){"use strict";function job(id){return Restangular.one("jobs",id)}function jobs(){return Restangular.all("jobs")}var errorHandler,self=this;this.all=function(jobIds){return void 0===jobIds?jobs(jobIds).getList():(jobIds=jobIds||[],$q.all(jobIds.map(function(id){return job(id).get()})))},this.get=function(jobId){return job(jobId).get()},this["delete"]=function(jobId){return job(jobId).remove()},this.listen=function(jobId){var deferred=$q.defer(),isRequestPending=!1,requestCounter=0,intervalId=window.setInterval(function(){isRequestPending||(isRequestPending=!0,requestCounter++,self.get(jobId).then(function(job){if("failed"===job.status)clearInterval(intervalId),deferred.reject({errors:job.errors,warnings:job.warnings,url:job.getRestangularUrl(),action:job.action});else if("completed"===job.status)clearInterval(intervalId),deferred.resolve(job.next_job_id?self.listen(job.next_job_id):jobId);else{var timeout=60;20>requestCounter&&(timeout=3),window.setTimeout(function(){isRequestPending=!1},1e3*timeout)}}).then(null,function(error){clearInterval(intervalId),deferred.reject(error)}))},1e3);return deferred.promise},this.wrapAsyncPromise=function(promise){return promise.then(function(asyncResult){var jobId=(asyncResult.job_ids||[]).slice(-1)[0];return self.listen(jobId).then(function(){return asyncResult})["catch"](function(err){throw errorHandler&&errorHandler(err),err})})},this.setErrorHandler=function(cb){errorHandler=cb}}),angular.module("predicsis.jsSDK.models").service("Modalities",function($q,Restangular,Jobs){"use strict";function modality(id){return Restangular.one("modalities_sets",id)}function modalities(){return Restangular.all("modalities_sets")}this.create=function(params){return Jobs.wrapAsyncPromise(modalities().post({modalities_set:params})).then(function(result){return modality(result.id).get()})},this.all=function(modalitiesSetIds){return void 0===modalitiesSetIds?modalities().getList():(modalitiesSetIds=modalitiesSetIds||[],$q.all(modalitiesSetIds.map(function(id){return modality(id).get()})))},this.get=function(id){return modality(id).get()},this["delete"]=function(id){return modality(id).remove()}}),angular.module("predicsis.jsSDK.models").service("Models",function($q,$injector,Restangular,Jobs){"use strict";function model(id){return Restangular.one("models",id)}function models(){return Restangular.all("models")}var self=this;this.createClassifier=function(preparationRulesSetId){return self.create({type:"classifier",preparation_rules_set_id:preparationRulesSetId})},this.create=function(params){return Jobs.wrapAsyncPromise(models().post({model:params})).then(function(result){return model(result.id).get()})},this.all=function(modelIds){return void 0===modelIds?models().getList():(modelIds=modelIds||[],$q.all(modelIds.map(function(id){return model(id).get()})))},this.get=function(id){return model(id).get()},this.update=function(id,changes){return Jobs.wrapAsyncPromise(model(id).patch({model:changes})).then(function(result){return model(result.id).get()})},this["delete"]=function(id){return model(id).remove()},this.learn=function(project){var Models=this,Datasets=$injector.get("Datasets"),Reports=$injector.get("Reports"),Projects=$injector.get("Projects"),PreparationRules=$injector.get("PreparationRules"),$rootScope=$injector.get("$rootScope"),results={};return $rootScope.$broadcast("jsSDK.learn.start-retrieving-train-dataset"),Datasets.getChildren(project.learning_dataset_id,project.dictionary_id).then(function(children){if(!children.train)throw"Invalid project on POST preparation_rules, no valid train dataset found";return $rootScope.$broadcast("jsSDK.learn.start-creating-preparation-rules"),PreparationRules.create({variable_id:project.target_variable_id,dataset_id:children.train.id})}).then(function(preparationRulesRet){return results.preparation_rules_set=preparationRulesRet,$rootScope.$broadcast("jsSDK.learn.start-learning"),Models.createClassifier(preparationRulesRet.id)}).then(function(classifier){results.classifier=classifier,project.classifier_id=classifier.id,$rootScope.$broadcast("jsSDK.learn.start-generating-reports");var requestedReports={univariate_supervised_report:Reports.createUnivariateSupervisedReport(project)};return null!==project.main_modality&&(requestedReports.train_classifier_evaluation_report=Reports.createTrainClassifierEvaluationReport(project),requestedReports.test_classifier_evaluation_reports=Reports.createTestClassifierEvaluationReport(project)),$q.all(requestedReports)}).then(function(reports){var reportIds=[];return reportIds[0]=reports.train_classifier_evaluation_report.id,reportIds[1]=reports.test_classifier_evaluation_reports.id,reportIds[2]=reports.univariate_supervised_report.id,$rootScope.$broadcast("jsSDK.learn.start-updating-project"),Projects.update(project.id,{preparation_rules_set_id:results.preparation_rules_set.id,classifier_id:results.classifier.id,report_ids:reportIds})}).then(function(){return results.classifier})}}),angular.module("predicsis.jsSDK.models").service("OauthApplications",function(Restangular){"use strict";function settings(){return Restangular.all("settings")}function applications(){return settings().all("applications")}this.create=function(name,redirectURI){return applications().post({application:{name:name,redirect_uri:redirectURI}})},this.all=function(){return applications().getList()},this.get=function(appId){return settings().one("applications",appId).get()},this.update=function(appId,changes){return settings().one("applications",appId).patch({application:changes})},this["delete"]=function(appId){return settings().one("applications",appId).remove()}}),angular.module("predicsis.jsSDK.models").service("OauthTokens",function(Restangular){"use strict";function settings(){return Restangular.all("settings")}function tokens(){return settings().all("tokens")}this.create=function(name){return tokens().post({token:{name:name}})},this.all=function(){return tokens().getList()},this.get=function(tokenId){return settings().one("tokens",tokenId).get()},this["delete"]=function(tokenId){return settings().one("tokens",tokenId).remove()}}),angular.module("predicsis.jsSDK.models").service("PreparationRules",function($q,Restangular,Jobs){"use strict";function preparationRulesSet(id){return Restangular.one("preparation_rules_sets",id)}function preparationRulesSets(){return Restangular.all("preparation_rules_sets")}this.create=function(params){return Jobs.wrapAsyncPromise(preparationRulesSets().post({preparation_rules_set:params})).then(function(result){return preparationRulesSet(result.id).get()})},this.all=function(preparationRulesSetIds){return void 0===preparationRulesSetIds?preparationRulesSets().getList():(preparationRulesSetIds=preparationRulesSetIds||[],$q.all(preparationRulesSetIds.map(function(id){return preparationRulesSet(id).get()})))},this.get=function(id){return preparationRulesSet(id).get()},this.update=function(id,changes){return Jobs.wrapAsyncPromise(preparationRulesSet(id).patch({preparation_rules_set:changes})).then(function(result){return preparationRulesSet(result.id).get()})},this["delete"]=function(id){return preparationRulesSet(id).remove()}}),angular.module("predicsis.jsSDK.models").service("Projects",function($q,$injector,Restangular){"use strict";function project(id){return Restangular.one("projects",id)}function projects(){return Restangular.all("projects")}this.create=function(params){return projects().post({project:params})},this.all=function(projectIds){return void 0===projectIds?projects(projectIds).getList():(projectIds=projectIds||[],$q.all(projectIds.map(function(id){return project(id).get()})))},this.get=function(projectId){return project(projectId).get()},this.update=function(projectId,changes){return project(projectId).patch({project:changes})},this["delete"]=function(projectId){return project(projectId).remove()},this.addLearningDataset=function(project,datasetId){return this.update(project.id,{learning_dataset_id:datasetId})},this.addScoringDataset=function(project,datasetId){var update={};return update.scoring_dataset_ids=project.scoring_dataset_ids||[],update.scoring_dataset_ids.push(datasetId),this.update(project.id,update)},this.addScoreset=function(project,datasetId){var update={};return update.scoreset_ids=project.scoreset_ids||[],update.scoreset_ids.push(datasetId),this.update(project.id,update)},this.resetDictionary=function(projectId){return this.update(projectId,{dictionary_id:null,is_dictionary_verified:null,target_variable_id:null,main_modality:null})},this.removeDependencies=function(projectId){var Dictionaries=$injector.get("Dictionaries"),Models=$injector.get("Models");return this.get(projectId).then(function(project){return null===project.dictionary_id?project:Dictionaries["delete"](project.dictionary_id).then(function(){return project})}).then(function(project){return null===project.classifier_id?project:Models["delete"](project.classifier_id).then(function(){return project},function(err){if(404===err.status)return project;throw err})})},this.isModelDone=function(project){return Boolean(project.classifier_id)},this.isDictionaryVerified=function(project){return Boolean(project.is_dictionary_verified)}}),angular.module("predicsis.jsSDK.models").service("Reports",function($q,$injector,Restangular,Jobs){"use strict";function createClassifierEvaluationReport(project,type){var Datasets=$injector.get("Datasets");return Datasets.getChildren(project.learning_dataset_id,project.dictionary_id).then(function(children){return self.create({type:"classifier_evaluation",dataset_id:children[type].id,classifier_id:project.classifier_id,modalities_set_id:project.modalities_set_id,main_modality:project.main_modality})})}var self=this,report=function(id){return Restangular.one("reports",id)},reports=function(){return Restangular.all("reports")};this.createTrainClassifierEvaluationReport=function(project){return createClassifierEvaluationReport(project,"train")},this.createTestClassifierEvaluationReport=function(project){return createClassifierEvaluationReport(project,"test")},this.createUnivariateSupervisedReport=function(project){var Datasets=$injector.get("Datasets");return Datasets.getChildren(project.learning_dataset_id,project.dictionary_id).then(function(children){return self.create({type:"univariate_supervised",dataset_id:children.train.id,dictionary_id:project.dictionary_id,variable_id:project.target_variable_id})})},this.create=function(params){return Jobs.wrapAsyncPromise(reports().post({report:params})).then(function(result){return report(result.id).get()})},this.all=function(reportIds){return void 0===reportIds?reports(reportIds).getList():(reportIds=reportIds||[],$q.all(reportIds.map(function(id){return report(id).get()})))},this.get=function(reportId){return report(reportId).get()},this.update=function(reportId,changes){return Jobs.wrapAsyncPromise(report(reportId).patch({report:changes})).then(function(result){return report(result.id).get()})},this["delete"]=function(reportId){return report(reportId).remove()}}),angular.module("predicsis.jsSDK.models").service("Sources",function($q,Restangular,Jobs){"use strict";function source(id){return Restangular.one("sources",id)}function sources(){return Restangular.all("sources")}this.create=function(_source,dataStore){return Jobs.wrapAsyncPromise(sources().post({source:_source,data_store:dataStore})).then(function(result){return source(result.id).get()})},this.all=function(sourceIds){return void 0===sourceIds?sources().getList():(sourceIds=sourceIds||[],$q.all(sourceIds.map(function(id){return source(id).get()})))},this.get=function(sourceId){return source(sourceId).get()},this.update=function(sourceId,changes){return source(sourceId).patch({source:changes})},this["delete"]=function(sourceId){return source(sourceId).remove()}}),angular.module("predicsis.jsSDK.models").service("Uploads",function(Restangular){"use strict";function upload(id){return Restangular.one("uploads",id)}function uploads(){return Restangular.all("uploads")}this.initiate=function(){return uploads().post({}).then(function(result){return"s3"===result.type&&(result.container=result.bucket),result})},this.getPartUrl=function(id,partNumber,path){return upload(id).get({part_number:partNumber,path:path},{hideErrors:!0})},this.complete=function(id,path){return upload(id).patch({path:path},{})}}),angular.module("predicsis.jsSDK.models").service("UserSettings",function(Restangular){"use strict";this.get=function(){return Restangular.one("settings","").get()},this.update=function(changes){return Restangular.all("settings").patch({settings:changes})}}),angular.module("predicsis.jsSDK.models").service("Users",function($q,Restangular){"use strict";function user(id){return Restangular.one("users",id)}function users(){return Restangular.all("users")}this.create=function(params){return users().post({user:params})},this.resetPassword=function(email,redirectUri){return users().all("password").post({user:{email:email,redirect_uri:redirectUri}})},this.getCurrentUser=function(){return user("me").get()},this.update=function(id,changes){if("current_password"in changes&&"password"in changes){var password={current_password:changes.current_password,password:changes.password};return delete changes.current_password,delete changes.password,Object.keys(changes).length>0?$q.all({profile:user(id).patch({user:changes}),password:users().all("update_password").patch({user:password})}):users().all("update_password").patch({user:password})}return user(id).patch({user:changes})},this["delete"]=function(id){return user(id).remove()}}),angular.module("predicsis.jsSDK.models").service("Variables",function($q,Restangular){"use strict";function variable(dictionaryId,variableId){return Restangular.one("dictionaries",dictionaryId).one("variables",variableId)}function variables(dictionaryId){return Restangular.one("dictionaries",dictionaryId).all("variables")}this.all=function(dictionaryId,variablesIds){return void 0===variablesIds?variables(dictionaryId,variablesIds).getList():(variablesIds=variablesIds||[],$q.all(variablesIds.map(function(id){return variable(dictionaryId,id).get()})))},this.get=function(dictionaryId,variableId){return variable(dictionaryId,variableId).get()},this.update=function(dictionaryId,variableId,changes){return variable(dictionaryId,variableId).patch({variable:changes})}}),angular.module("predicsis.jsSDK.helpers").service("uploadHelper",function($rootScope,$injector){"use strict";function EventEmitter(){var listeners={};this.on=function(event,cb){return listeners[event]=(listeners[event]||[]).concat([cb]),this},this.off=function(event,cb){return listeners[event]=(listeners[event]||[]).filter(function(listener){return listener!==cb}),this},this.emit=function(event,data){return listeners[event]&&listeners[event].forEach(function(cb){return cb(data)}),this},this.addEventListener=this.on,this.removeEventListener=this.off}function wait(ms){return function(value){return new Promise(function(resolve){setTimeout(function(){resolve(value)},ms)})}}function retry(options){function tryTask(retryCpt){retryCpt=retryCpt||1;var result=options.task(options.ctx);return events.emit("try",{promise:result,retries:retryCpt}),result["catch"](function(err){if(options.isRetryable(err)&&retryCpt<options.maxRetry)return wait(retryCpt?options.delay(retryCpt):0)().then(function(){return tryTask(retryCpt+1)});throw err})}options=options||{},options.delay=options.delay||function(){return 0},options.isRetryable=options.isRetryable||function(){return!0},options.maxRetry=options.maxRetry||5;var events=new EventEmitter;return angular.extend(tryTask(),{events:events})}function chunks(file,options){for(var chunks=[],CHUNK_SIZE=options.chunkSize,offset=options.fileOffset||0,index=parseInt(offset/CHUNK_SIZE,10);offset<file.size;){index++;var chunk=file.slice(offset,offset+CHUNK_SIZE);chunks.push({chunk:chunk,index:index}),offset+=CHUNK_SIZE}return chunks}function uploadChunk(chunk,index,id,path,events){var cancel=function(){},isCancelled=!1,promise=retry({task:function(){return Uploads.getPartUrl(id,index,path).then(function(authorization){var result=rehttp.request({url:authorization.part_url,method:"PUT",body:chunk});return cancel=function(){result.cancel()},result.events.on("uploadProgress",function(progress){events.emit("progress",{progress:progress,index:index})}),result}).then(function(res){if(res.status!==HTTP.OK)throw res;return res})},isRetryable:function(err){return[HTTP.NOT_FOUND,HTTP.FORBIDDEN].indexOf(err.status)>-1?!1:isCancelled?!1:!0},delay:function(cpt){return 1e4*cpt},maxRetry:5}),promiseMeta={events:events,cancel:function(){isCancelled=!0,cancel()}};return events.emit("start",{index:index,cancel:promiseMeta.cancel}),angular.extend(promise,promiseMeta)}function upload(file,options){var chunkSize=options.chunkSize,uploadId=options.uploadId,uploadPath=options.uploadPath,fileOffset=options.fileOffset||0,chunksProgress=[fileOffset],chunksCancel=[],events=new EventEmitter,promise=Promise.resolve(function(){return uploadId?{path:uploadPath,id:uploadId}:Uploads.initiate().then(function(ctx){return"s3"===ctx.type?ctx.path=ctx.key:"swift"===ctx.type&&(ctx.path=ctx.object),ctx})}());return promise=promise.then(function(ctx){var uploadId=ctx.id,uploadPath=ctx.path,container=ctx.container,type=ctx.type,uploadChunksEvents=new EventEmitter;uploadChunksEvents.on("start",function(ctx){chunksProgress[ctx.index]=0,ctx.cancel&&(chunksCancel[ctx.index]=function(){ctx.cancel()}),uploadChunksEvents.on("progress",function(ctx){chunksProgress[ctx.index]=ctx.progress.loaded;var progression=chunksProgress.reduce(function(m,v){return m+v},0)/file.size;events.emit("progress",100*progression)})}),uploadChunksEvents.on("end",function(){fileOffset+=chunkSize}),uploadChunksEvents.on("end",function(ctx){delete chunksCancel[ctx.index]});var result=Promise.map(chunks(file,{chunkSize:chunkSize,fileOffset:fileOffset}),function(v){return uploadChunk(v.chunk,v.index,uploadId,uploadPath,uploadChunksEvents)},{concurrency:3});return result.then(function(){return{uploadId:uploadId,uploadPath:uploadPath,container:container,type:type}})}).then(function(ctx){return retry({task:function(){return Uploads.complete(ctx.uploadId,ctx.uploadPath).then(function(){return{uploadId:ctx.uploadId,uploadPath:ctx.uploadPath,type:ctx.type,container:ctx.container}})},isRetryable:function(err){return[HTTP.NOT_FOUND,HTTP.FORBIDDEN].indexOf(err.status)>-1?!1:!0},delay:function(cpt){return 1e4*cpt},maxRetry:5})})["catch"](function(err){throw{err:err,uploadId:uploadId,uploadPath:uploadPath,fileOffset:fileOffset}}),angular.extend(promise,{events:events,cancel:function(){chunksCancel.forEach(function(cancel){cancel()})}})}var HTTP={CREATED:201,OK:200,NOT_FOUND:404,BAD_REQUEST:400,FORBIDDEN:403},Uploads=$injector.get("Uploads"),concurrentUploads={};this.processFile=function(file,options){var uploadRes,self=this,chunkSize=options.chunkSize||52428800;uploadRes=options.serverUploadId?upload(file,{chunkSize:chunkSize,uploadId:options.serverUploadId,fileOffset:options.fileOffset,uploadPath:options.uploadPath}):upload(file,{chunkSize:chunkSize});var uploadId=options.uploadId||(new Date).getTime()+"_"+(file.name||"");uploadRes.events.on("progress",function(progress){$rootScope.$broadcast("jsSDK.upload.progress",{fileName:file.name,id:uploadId,progression:progress})}),uploadRes.then(function(ctx){delete concurrentUploads[uploadId],$rootScope.$broadcast("jsSDK.upload.uploaded",{id:uploadId,path:ctx.uploadPath,fileName:file.name,type:ctx.type,container:ctx.container})}),uploadRes["catch"](function(err){$rootScope.$broadcast("jsSDK.upload.error",{fileName:file.name,id:uploadId,err:err,path:err.uploadPath},function(){self.processFile(file,{chunkSize:chunkSize,uploadId:uploadId,serverUploadId:err.uploadId,uploadPath:err.uploadPath,fileOffset:err.fileOffset})})});var uploadObject=concurrentUploads[uploadId]={id:uploadId,path:null,type:null,fileName:file.name,fileSize:file.size,progression:0,isUploading:!0,chunkSize:chunkSize,created_at:(new Date).toISOString(),cancelUpload:function(){uploadRes.cancel(),delete concurrentUploads[uploadId],$rootScope.$broadcast("jsSDK.upload.cancelled",uploadObject)}};$rootScope.$broadcast("jsSDK.upload.starting",uploadObject)},this.all=function(){return Object.keys(concurrentUploads).map(function(key){return concurrentUploads[key]})},this.get=function(uploadId){return concurrentUploads[uploadId]},this.cancel=function(uploadId){this.get(uploadId).cancelUpload()}});
//# sourceMappingURL=predicsis-jsSDK.min.js.map