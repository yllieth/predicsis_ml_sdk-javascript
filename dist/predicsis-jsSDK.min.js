angular.module("predicsis.jsSDK.models",[]),angular.module("predicsis.jsSDK.helpers",[]),angular.module("predicsis.jsSDK",["predicsis.jsSDK.models","predicsis.jsSDK.helpers","restangular"]).provider("predicsisAPI",function(){"use strict";var errorHandler=function(response){throw Error(response)},baseURL="https://api.predicsis.com",oauthToken="no-token-defined";this.setBaseUrl=function(url){baseURL=url},this.getBaseUrl=function(){return baseURL},this.setOauthToken=function(token){oauthToken=token},this.getOauthToken=function(){return oauthToken},this.hasOauthToken=function(){return Boolean(void 0===oauthToken)},this.setErrorHandler=function(handler){errorHandler=handler},this.$get=function(Restangular,uploadHelper,Datafiles,Datasets,Dictionaries,Jobs,Modalities,Models,OauthTokens,OauthApplications,PreparationRules,Projects,Reports,UserSettings,Sources,Users,Variables){var self=this;return Restangular.setBaseUrl(this.getBaseUrl()),Restangular.setDefaultHeaders({accept:"application/json",Authorization:"Bearer "+this.getOauthToken()}),Restangular.setErrorInterceptor(function(response){errorHandler(response)}),Jobs.setErrorHandler(function(err){err={data:{message:err.message,status:err.status,errors:[err]},status:err.status},errorHandler(err)}),Restangular.addResponseInterceptor(function(data,operation,what,url,response){if(["getList","post","get","patch"].indexOf(operation)>-1&&204!==response.status){var resourceName=Object.keys(response.data)[0];resourceName&&(data=response.data[resourceName])}return data}),{Datafiles:Datafiles,Datasets:Datasets,Dictionaries:Dictionaries,Jobs:Jobs,Modalities:Modalities,Models:Models,OauthTokens:OauthTokens,OauthApplications:OauthApplications,PreparationRules:PreparationRules,Projects:Projects,Reports:Reports,Sources:Sources,Users:Users,UserSettings:UserSettings,Variables:Variables,uploadHelper:uploadHelper,_restangular:Restangular,setOauthToken:function(token){self.setOauthToken(token),Restangular.setDefaultHeaders({accept:"application/json",Authorization:token})},setErrorHandler:function(handler){self.setErrorHandler(handler)}}}}),angular.module("predicsis.jsSDK.models").service("Datafiles",function($q,Restangular){"use strict";function dataFile(id){return Restangular.one("data_files",id)}function dataFiles(){return Restangular.all("data_files")}this.all=function(dataFileIds){return void 0===dataFileIds?dataFiles().getList():(dataFileIds=dataFileIds||[],$q.all(dataFileIds.map(function(id){return dataFile(id).get()})))},this.get=function(dataFileId){return dataFile(dataFileId).get()},this.getSignedUrl=function(datasetId){return dataFile(datasetId).one("signed_url",null).get().then(function(url){return url.signed_url})},this.download=function(datasetId){this.getSignedUrl(datasetId).then(function(signedUrl){window.location.assign(signedUrl)})}}),angular.module("predicsis.jsSDK.models").service("Datasets",function($injector,$q,Restangular,Jobs){"use strict";function dataset(id){return Restangular.one("datasets",id)}function datasets(){return Restangular.all("datasets")}var self=this;this.create=function(params){return Jobs.wrapAsyncPromise(datasets().post({dataset:params})).then(function(result){return dataset(result.id).get()})},this.createFromUpload=function(fileName,destFolder){var Sources=$injector.get("Sources");return Sources.create({name:fileName,key:destFolder}).then(function(source){return self.create({name:fileName,source_ids:[source.id],data_file:{filename:fileName}})})},this.split=function(id,name,filename,sampling){filename=filename||name,sampling=sampling||70;var learn={parent_dataset_id:id,name:"learned_"+name,data_file:{filename:"learned_"+filename},sampling:sampling},test={parent_dataset_id:id,name:"tested_"+name,data_file:{filename:"tested_"+filename},sampling:-sampling};return $q.all([this.create(learn),this.create(test)])},this.all=function(ids){return void 0===ids?datasets().getList():(ids=ids||[],$q.all(ids.map(function(id){return dataset(id).get()})))},this.get=function(id){return dataset(id).get()},this.getChildren=function(id){return self.get(id).then(function(originalDataset){return self.all(originalDataset.children_dataset_ids)}).then(function(subsets){return subsets.reduce(function(memo,child){return child.sampling>0?memo.train=child:memo.test=child,memo},{})})},this.update=function(id,changes){return changes.separator&&"	"===changes.separator&&(changes.separator="\\t"),Jobs.wrapAsyncPromise(dataset(id).patch({dataset:changes})).then(function(result){return dataset(result.id).get()})},this["delete"]=function(id){return dataset(id).remove()},this.removeDependencies=function(dataset){var Sources=$injector.get("Sources"),source_ids=dataset.source_ids||[],children_ids=dataset.children_dataset_ids||[];return $q.all([$q.all(source_ids.map(function(source_id){return Sources["delete"](source_id)})),$q.all(children_ids.map(function(child_id){return self["delete"](child_id)}))])},this.hasChildren=function(dataset){return Boolean(dataset.children_dataset_ids.length>0)},this.isParent=function(dataset){return Boolean(null===dataset.parent_dataset_id)},this.isChild=function(dataset){return Boolean(null!==dataset.parent_dataset_id)},this.isTrainPart=function(dataset){return this.isChild(dataset)&&dataset.sampling>0},this.isTestPart=function(dataset){return this.isChild(dataset)&&dataset.sampling<0},this.isFormatted=function(dataset){return Boolean(null!==dataset.header)&&Boolean(null!==dataset.separator)},this.isScore=function(dataset){return Boolean(0===dataset.source_ids.length)&&Boolean(null!==dataset.main_modality)&&Boolean(null!==dataset.classifier)&&Boolean(null!==dataset.dataset_id)}}),angular.module("predicsis.jsSDK.models").service("Dictionaries",function($q,Restangular,Jobs){"use strict";function dictionary(id){return Restangular.one("dictionaries",id)}function dictionaries(){return Restangular.all("dictionaries")}this.createFromDataset=function(dataset){return this.create({name:encodeURI("dictionary_"+dataset.name.toLowerCase()),dataset_id:dataset.id})},this.create=function(params){return Jobs.wrapAsyncPromise(dictionaries().post({dictionary:params})).then(function(result){return dictionary(result.id).get()})},this.all=function(dictionaryIds){return void 0===dictionaryIds?dictionaries(dictionaryIds).getList():(dictionaryIds=dictionaryIds||[],$q.all(dictionaryIds.map(function(id){return dictionary(id).get()})))},this.get=function(dictionaryId){return dictionary(dictionaryId).get()},this.update=function(dictionaryId,changes){return Jobs.wrapAsyncPromise(dictionary(dictionaryId).patch({dictionary:changes})).then(function(result){return dictionary(result.id).get()})},this["delete"]=function(dictionaryId){return dictionary(dictionaryId).remove()}}),angular.module("predicsis.jsSDK.models").service("Jobs",function($q,Restangular){"use strict";function job(id){return Restangular.one("jobs",id)}function jobs(){return Restangular.all("jobs")}var errorHandler,self=this;this.all=function(jobIds){return void 0===jobIds?jobs(jobIds).getList():(jobIds=jobIds||[],$q.all(jobIds.map(function(id){return job(id).get()})))},this.get=function(jobId){return job(jobId).get()},this["delete"]=function(jobId){return job(jobId).remove()},this.listen=function(jobId){var deferred=$q.defer(),isRequestPending=!1,requestCounter=0,intervalId=window.setInterval(function(){isRequestPending||(isRequestPending=!0,requestCounter++,self.get(jobId).then(function(job){if("failed"===job.status){clearInterval(intervalId);var error=new Error(job.error.message);error.status=job.error.status,deferred.reject(error)}else if("completed"===job.status)clearInterval(intervalId),deferred.resolve(jobId);else{var timeout=60;20>requestCounter&&(timeout=3),window.setTimeout(function(){isRequestPending=!1},1e3*timeout)}}).then(null,function(error){clearInterval(intervalId),deferred.reject(error)}))},1e3);return deferred.promise},this.wrapAsyncPromise=function(promise){return promise.then(function(asyncResult){var jobId=(asyncResult.job_ids||[]).slice(-1)[0];return self.listen(jobId).then(function(){return asyncResult})["catch"](function(err){throw errorHandler&&errorHandler(err),err})})},this.setErrorHandler=function(cb){errorHandler=cb}}),angular.module("predicsis.jsSDK.models").service("Modalities",function($q,Restangular,Jobs){"use strict";function modality(id){return Restangular.one("modalities_sets",id)}function modalities(){return Restangular.all("modalities_sets")}this.create=function(params){return Jobs.wrapAsyncPromise(modalities().post({modalities_set:params})).then(function(result){return modality(result.id).get()})},this.all=function(modalitiesSetIds){return void 0===modalitiesSetIds?modalities().getList():(modalitiesSetIds=modalitiesSetIds||[],$q.all(modalitiesSetIds.map(function(id){return modality(id).get()})))},this.get=function(id){return modality(id).get()},this["delete"]=function(id){return modality(id).remove()}}),angular.module("predicsis.jsSDK.models").service("Models",function($q,$injector,Restangular,Jobs){"use strict";function model(id){return Restangular.one("models",id)}function models(){return Restangular.all("models")}var self=this;this.createClassifier=function(preparationRulesSetId){return self.create({type:"classifier",preparation_rules_set_id:preparationRulesSetId})},this.create=function(params){return Jobs.wrapAsyncPromise(models().post({model:params})).then(function(result){return model(result.id).get()})},this.all=function(modelIds){return void 0===modelIds?models().getList():(modelIds=modelIds||[],$q.all(modelIds.map(function(id){return model(id).get()})))},this.get=function(id){return model(id).get()},this.update=function(id,changes){return Jobs.wrapAsyncPromise(model(id).patch({model:changes})).then(function(result){return model(result.id).get()})},this["delete"]=function(id){return model(id).remove()},this.learn=function(project){var Models=this,Datasets=$injector.get("Datasets"),Reports=$injector.get("Reports"),Projects=$injector.get("Projects"),PreparationRules=$injector.get("PreparationRules"),$rootScope=$injector.get("$rootScope"),results={};return $rootScope.$broadcast("jsSDK.learn.start-retrieving-train-dataset"),Datasets.getChildren(project.learning_dataset_id).then(function(children){if(!children.train)throw"Invalid project on POST preparation_rules, no valid train dataset found";return $rootScope.$broadcast("jsSDK.learn.start-creating-preparation-rules"),PreparationRules.create({variable_id:project.target_variable_id,dataset_id:children.train.id})}).then(function(preparationRulesRet){return results.preparation_rules_set=preparationRulesRet,$rootScope.$broadcast("jsSDK.learn.start-learning"),Models.createClassifier(preparationRulesRet.id)}).then(function(classifier){results.classifier=classifier,project.classifier_id=classifier.id,$rootScope.$broadcast("jsSDK.learn.start-generating-reports");var requestedReports={univariate_supervised_report:Reports.createUnivariateSupervisedReport(project)};return null!==project.main_modality&&(requestedReports.train_classifier_evaluation_report=Reports.createTrainClassifierEvaluationReport(project),requestedReports.test_classifier_evaluation_reports=Reports.createTestClassifierEvaluationReport(project)),$q.all(requestedReports)}).then(function(reports){var reportIds=[];return reportIds[0]=reports.train_classifier_evaluation_report.id,reportIds[1]=reports.test_classifier_evaluation_reports.id,reportIds[2]=reports.univariate_supervised_report.id,$rootScope.$broadcast("jsSDK.learn.start-updating-project"),Projects.update(project.id,{preparation_rules_set_id:results.preparation_rules_set.id,classifier_id:results.classifier.id,report_ids:reportIds})}).then(function(){return results.classifier})}}),angular.module("predicsis.jsSDK.models").service("OauthApplications",function(Restangular){"use strict";function settings(){return Restangular.all("settings")}function applications(){return settings().all("applications")}this.create=function(name,redirectURI){return applications().post({application:{name:name,redirect_uri:redirectURI}})},this.all=function(){return applications().getList()},this.get=function(appId){return settings().one("applications",appId).get()},this.update=function(appId,changes){return settings().one("applications",appId).patch({application:changes})},this["delete"]=function(appId){return settings().one("applications",appId).remove()}}),angular.module("predicsis.jsSDK.models").service("OauthTokens",function(Restangular){"use strict";function settings(){return Restangular.all("settings")}function tokens(){return settings().all("tokens")}this.create=function(name){return tokens().post({token:{name:name}})},this.all=function(){return tokens().getList()},this.get=function(tokenId){return settings().one("tokens",tokenId).get()},this["delete"]=function(tokenId){return settings().one("tokens",tokenId).remove()}}),angular.module("predicsis.jsSDK.models").service("PreparationRules",function($q,Restangular,Jobs){"use strict";function preparationRulesSet(id){return Restangular.one("preparation_rules_sets",id)}function preparationRulesSets(){return Restangular.all("preparation_rules_sets")}this.create=function(params){return Jobs.wrapAsyncPromise(preparationRulesSets().post({preparation_rules_set:params})).then(function(result){return preparationRulesSet(result.id).get()})},this.all=function(preparationRulesSetIds){return void 0===preparationRulesSetIds?preparationRulesSets().getList():(preparationRulesSetIds=preparationRulesSetIds||[],$q.all(preparationRulesSetIds.map(function(id){return preparationRulesSet(id).get()})))},this.get=function(id){return preparationRulesSet(id).get()},this.update=function(id,changes){return Jobs.wrapAsyncPromise(preparationRulesSet(id).patch({preparation_rules_set:changes})).then(function(result){return preparationRulesSet(result.id).get()})},this["delete"]=function(id){return preparationRulesSet(id).remove()}}),angular.module("predicsis.jsSDK.models").service("Projects",function($q,$injector,Restangular){"use strict";function project(id){return Restangular.one("projects",id)}function projects(){return Restangular.all("projects")}this.create=function(params){return projects().post({project:params})},this.all=function(projectIds){return void 0===projectIds?projects(projectIds).getList():(projectIds=projectIds||[],$q.all(projectIds.map(function(id){return project(id).get()})))},this.get=function(projectId){return project(projectId).get()},this.update=function(projectId,changes){return project(projectId).patch({project:changes})},this["delete"]=function(projectId){return project(projectId).remove()},this.addLearningDataset=function(project,datasetId){return this.update(project.id,{learning_dataset_id:datasetId})},this.addScoringDataset=function(project,datasetId){var update={};return update.scoring_dataset_ids=project.scoring_dataset_ids||[],update.scoring_dataset_ids.push(datasetId),this.update(project.id,update)},this.addScoreset=function(project,datasetId){var update={};return update.scoreset_ids=project.scoreset_ids||[],update.scoreset_ids.push(datasetId),this.update(project.id,update)},this.resetDictionary=function(projectId){return this.update(projectId,{dictionary_id:null,is_dictionary_verified:null,target_variable_id:null,main_modality:null})},this.removeDependencies=function(projectId){var Dictionaries=$injector.get("Dictionaries"),Models=$injector.get("Models");return this.get(projectId).then(function(project){return null===project.dictionary_id?project:Dictionaries["delete"](project.dictionary_id).then(function(){return project})}).then(function(project){return null===project.classifier_id?project:Models["delete"](project.classifier_id).then(function(){return project},function(err){if(404===err.status)return project;throw err})})},this.isModelDone=function(project){return Boolean(project.classifier_id)},this.isDictionaryVerified=function(project){return Boolean(project.is_dictionary_verified)}}),angular.module("predicsis.jsSDK.models").service("Reports",function($q,$injector,Restangular,Jobs){"use strict";function createClassifierEvaluationReport(project,type){var Datasets=$injector.get("Datasets");return Datasets.getChildren(project.learning_dataset_id).then(function(children){return self.create({type:"classifier_evaluation",dataset_id:children[type].id,classifier_id:project.classifier_id,modalities_set_id:project.modalities_set_id,main_modality:project.main_modality})})}var self=this,report=function(id){return Restangular.one("reports",id)},reports=function(){return Restangular.all("reports")};this.createTrainClassifierEvaluationReport=function(project){return createClassifierEvaluationReport(project,"train")},this.createTestClassifierEvaluationReport=function(project){return createClassifierEvaluationReport(project,"test")},this.createUnivariateSupervisedReport=function(project){return self.create({type:"univariate_supervised",dataset_id:project.learning_dataset_id,dictionary_id:project.dictionary_id,variable_id:project.target_variable_id})},this.create=function(params){return Jobs.wrapAsyncPromise(reports().post({report:params})).then(function(result){return report(result.id).get()})},this.all=function(reportIds){return void 0===reportIds?reports(reportIds).getList():(reportIds=reportIds||[],$q.all(reportIds.map(function(id){return report(id).get()})))},this.get=function(reportId){return report(reportId).get()},this.update=function(reportId,changes){return Jobs.wrapAsyncPromise(report(reportId).patch({report:changes})).then(function(result){return report(result.id).get()})},this["delete"]=function(reportId){return report(reportId).remove()}}),angular.module("predicsis.jsSDK.models").service("Sources",function($q,Restangular){"use strict";function source(id){return Restangular.one("sources",id)}function sources(){return Restangular.all("sources")}this.create=function(params){return sources().post({source:params})},this.all=function(sourceIds){return void 0===sourceIds?sources().getList():(sourceIds=sourceIds||[],$q.all(sourceIds.map(function(id){return source(id).get()})))},this.get=function(sourceId){return source(sourceId).get()},this.getCredentials=function(storageService){return sources().one("credentials",storageService).get()},this.update=function(sourceId,changes){return source(sourceId).patch({source:changes})},this["delete"]=function(sourceId){return source(sourceId).remove()}}),angular.module("predicsis.jsSDK.models").service("UserSettings",function(Restangular){"use strict";this.get=function(){return Restangular.one("settings","").get()},this.update=function(changes){return Restangular.all("settings").patch({settings:changes})}}),angular.module("predicsis.jsSDK.models").service("Users",function($q,Restangular){"use strict";function user(id){return Restangular.one("users",id)}function users(){return Restangular.all("users")}this.create=function(params){return users().post({user:params})},this.resetPassword=function(email,redirectUri){return users().all("password").post({user:{email:email,redirect_uri:redirectUri}})},this.getCurrentUser=function(){return user("me").get()},this.update=function(id,changes){if("current_password"in changes&&"password"in changes){var password={current_password:changes.current_password,password:changes.password};return delete changes.current_password,delete changes.password,Object.keys(changes).length>0?$q.all({profile:user(id).patch({user:changes}),password:users().all("update_password").patch({user:password})}):users().all("update_password").patch({user:password})}return user(id).patch({user:changes})},this["delete"]=function(id){return user(id).remove()}}),angular.module("predicsis.jsSDK.models").service("Variables",function($q,Restangular){"use strict";function variable(dictionaryId,variableId){return Restangular.one("dictionaries",dictionaryId).one("variables",variableId)}function variables(dictionaryId){return Restangular.one("dictionaries",dictionaryId).all("variables")}this.all=function(dictionaryId,variablesIds){return void 0===variablesIds?variables(dictionaryId,variablesIds).getList():(variablesIds=variablesIds||[],$q.all(variablesIds.map(function(id){return variable(dictionaryId,id).get()})))},this.get=function(dictionaryId,variableId){return variable(dictionaryId,variableId).get()},this.update=function(dictionaryId,variableId,changes){return variable(dictionaryId,variableId).patch({variable:changes})}}),angular.module("predicsis.jsSDK.helpers").service("uploadHelper",function($rootScope,$injector){"use strict";function getKey(credential,filename){return credential.key.replace("${filename}",filename)}function upload(uploadObject,xhr2,credential,file){var headers={key:getKey(credential,file.name),AWSAccessKeyId:credential.aws_access_key_id,"Content-Type":"multipart/form-data",success_action_status:http.CREATED,acl:"private",policy:credential.policy,signature:credential.signature},content={file:file},form=formFactory(headers,content);xhr2.open("POST",credential.s3_endpoint,!0),xhr2.upload.addEventListener("progress",function(event){uploadObject.progression=parseInt(event.loaded/event.total*100),uploadObject.isUploading=!0,$rootScope.$broadcast("jsSDK.upload.progress",uploadObject)}),xhr2.addEventListener("load",function(){delete concurrentUploads[uploadObject.id],uploadObject.isUploading=!1,xhr2.status===http.CREATED?$rootScope.$broadcast("jsSDK.upload.uploaded",uploadObject):$rootScope.$broadcast("jsSDK.upload.error",{upload:uploadObject,request:xhr2})}),xhr2.addEventListener("error",function(){delete concurrentUploads[uploadObject.id],uploadObject.isUploading=!1,$rootScope.$broadcast("jsSDK.upload.error",{upload:uploadObject,request:xhr2})}),xhr2.send(form)}const http={CREATED:201};var concurrentUploads={},Sources=$injector.get("Sources");this.processFile=function(file,storageService){storageService=storageService||"s3";var xhr2=new XMLHttpRequest,uploadId=(new Date).getTime()+"_"+(file.name||""),uploadObject=concurrentUploads[uploadId]={id:uploadId,key:null,fileName:file.name,fileSize:file.size,progression:0,isUploading:!0,created_at:(new Date).toISOString(),cancelUpload:function(){xhr2.abort(),delete concurrentUploads[uploadId],$rootScope.$broadcast("jsSDK.upload.cancelled",uploadObject)}};$rootScope.$broadcast("jsSDK.upload.starting",uploadObject),Sources.getCredentials(storageService).then(function(credentials){uploadObject.key=getKey(credentials,file.name),upload(uploadObject,xhr2,credentials,file)})},this.all=function(){return Object.keys(concurrentUploads).map(function(key){return concurrentUploads[key]})},this.get=function(uploadId){return concurrentUploads[uploadId]},this.cancel=function(uploadId){this.get(uploadId).cancelUpload()}});
//# sourceMappingURL=predicsis-jsSDK.min.js.map